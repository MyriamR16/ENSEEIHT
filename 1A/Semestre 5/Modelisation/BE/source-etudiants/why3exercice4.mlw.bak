(* BE : Session 1 2020 *)
(* Implémentation de la fonction carre d'un entier naturel par un algorithme inspiré des identités remarquables *)

module Carre

  use int.Int
  use ref.Refint

  let carre (n: int) : int
    requires { n>=0 }
   
  =
    let x = ref n in
    let r = ref 0 in
    while  (!x <> 0) do
      invariant { (!r)+ (!x)*(!x)= n*n && (!x)>=0}
      variant   { (!x)}
      r :=  (!r) + 2 * (!x) - 1;
      x := (!x) - 1
    done;
    !r
 ensures  { (!r)=n*n }
end

{split ergo sur les 4}